What is Database?
>> It is an organized collection of data that can be esaily accessed, managed and updated.

Types of Database
-------------------
Relational DB: (RDBMS) (SQL Database)
----------------------
Data stored in Table form. SQL is used to manipulate the data.
Ex: MySQL, PostgerSQL, Oracle....

Non - Relational DB: (NoSQL Database)
-------------------
>> Data Stored as documents. SQL is not needed.
ex: MongoDB, Cassandra, Redirs.

MySQL:
-------
>> Open-source
>> Large community system

SQL ---> Structured Query Language.

Basic MySQL Syntax:
--------------------
>> SQL is case-insensitive.
>> Every sql query should end with ";"

DataStructure
----------------
Database ---> Table ---> data

Datatypes
-----------
Numeric Datatypes
-------------------
INT ---> whole numbers. Ex: -1,0,12,3,4,5...
FLOAT ---> decimal numbers. Ex: 3.14,32.3223....

String:
--------
CHAR(n)--> Fixed Length String. Ex: CHAR(5)--> should have 5 char
VARCHAR(n) --> Variable Character Length string. Ex: VARCHAR(5) ---> char length can be lower or equal to 5.
TEXT--> large text.
ENUM ---> used to create choices. ("Raj","Babu","Kumar")

Date 
-----
DATE ---> only date. format: yyyy-mm-dd
TIME ---> only time. format: hh:mm:ss.
DATETIME---> both date and time

Boolean:
--------
Boolean ---> 1 or 0


Constraint
-----------
primary key ---> It is just used to idetify each data uniquly


Queries:
---------
to create a database ---> CREATE DATABASE "DB name"
to select a DB ---? USE "DB name"
to create a table ----> CREATE TABLE "TB name"( 
    col1 Datatype Constraint,
    col2 Datatype,
    .
    .
    .
 );

Condition:
------------
Operators
---------
= --> equal to,
> --> greater than
< --> lesser than
<>, != --> not than

>= ---> Greater or equal
<= ---> Lesser or equal

BETWEEN ---> col1 BETWEEN start AND end;
IN --> match against multiple value.  col1 IN (val1,val2,val3....)

Pattern Matching (only in strings)
----------------
%---> 0 to any number of Characters.
_ --> exactly one Character.

--->'a%'
--->'%a'
--->'____'

LIKE --> col1 LIKE 'pattern'

Logical Operators
------------------
>> To combine two conditions.
AND --> true--> when both conditions are true. false--> any one condition or both are false. condition1 AND condition2.
OR -->  true--> when any one of two conditions is true. false--> both are false. condition1 AND condition2.
NOT --> it just inverts the value. NOT condition.

cond1   cond2
true    true
true    false
false   true
false   false


Basic CRUD Operation: (Data)
-----------------------------
CRUD--> Create Read Update Delete.

to add a new data to a table ---> INSERT INTO "tb name" (col details. * ---> all col without change in order) VALUES (),(),();
to select data from a table ---> SELECT (clo details) FROM "tb name";
to update a data --> UPDATE "tb name" SET col=value WHERE condition. (without condition, it will affect all the data.)
Delete --> DELETE FROM tbname WHERE condition. 


Create --> INSERT
Read ---> SELECT
Update --> UPDATE
Delete --> DELETE

Filtering results
------------------
to filter a data ---> SELECT (col details) FROM "tb name" WHERE condition;

Sorting data 
-------------
>>Arranging the result either in ascending order or descending order.

---> ORDER BY col1 (ASC, DESC).