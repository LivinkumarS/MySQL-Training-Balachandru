What is Database?
>> It is an organized collection of data that can be esaily accessed, managed and updated.

Types of Database
-------------------
Relational DB: (RDBMS) (SQL Database)
----------------------
Data stored in Table form. SQL is used to manipulate the data.
Ex: MySQL, PostgerSQL, Oracle....

Non - Relational DB: (NoSQL Database)
-------------------
>> Data Stored as documents. SQL is not needed.
ex: MongoDB, Cassandra, Redirs.

MySQL:
-------
>> Open-source
>> Large community system

SQL ---> Structured Query Language.

Basic MySQL Syntax:
--------------------
>> SQL is case-insensitive.
>> Every sql query should end with ";"

DataStructure
----------------
Database ---> Table ---> data

Datatypes
-----------
Numeric Datatypes
-------------------
INT ---> whole numbers. Ex: -1,0,12,3,4,5...
FLOAT ---> decimal numbers. Ex: 3.14,32.3223....

String:
--------
CHAR(n)--> Fixed Length String. Ex: CHAR(5)--> should have 5 char
VARCHAR(n) --> Variable Character Length string. Ex: VARCHAR(5) ---> char length can be lower or equal to 5.
TEXT--> large text.
ENUM ---> used to create choices. ("Raj","Babu","Kumar")

Date 
-----
DATE ---> only date. format: yyyy-mm-dd
TIME ---> only time. format: hh:mm:ss.
DATETIME---> both date and time

Boolean:
--------
Boolean ---> 1 or 0




Constraints:
------------
>> Rules that enforces on table columns to ensure data integrity.

Primary Key 
------------
>> column uniquely identifies each row. data that is entered in this field should be unique. It cannot have NULL value.

Foreign Key 
-----------
>> estabishes relationship between two tables.
>> values in foreign key column refers to primary key column inn another table.

Auto-Increment
----------------
>> Automatically increases numeric values for each new row.
>> Usually applied on primary keys.

Unique 
-------
>> Ensures all values in a column are different.

Not NULL
---------
>> It just ensures the column is not empty.

Default
--------
>> Assigns default value, if NULL is provided.


Queries:
---------
to create a database ---> CREATE DATABASE "DB name"
to select a DB ---? USE "DB name"
to create a table ----> CREATE TABLE "TB name"( 
    col1 Datatype Constraint,
    col2 Datatype,
    .
    .
    .
 );

Condition:
------------
Operators
---------
= --> equal to,
> --> greater than
< --> lesser than
<>, != --> not than

>= ---> Greater or equal
<= ---> Lesser or equal

BETWEEN ---> col1 BETWEEN start AND end;
IN --> match against multiple value.  col1 IN (val1,val2,val3....)

Pattern Matching (only in strings)
----------------
%---> 0 to any number of Characters.
_ --> exactly one Character.

--->'a%'
--->'%a'
--->'____'

LIKE --> col1 LIKE 'pattern'

Logical Operators
------------------
>> To combine two conditions.
AND --> true--> when both conditions are true. false--> any one condition or both are false. condition1 AND condition2.
OR -->  true--> when any one of two conditions is true. false--> both are false. condition1 AND condition2.
NOT --> it just inverts the value. NOT condition.

cond1   cond2
true    true
true    false
false   true
false   false


Basic CRUD Operation: (Data)
-----------------------------
CRUD--> Create Read Update Delete.

to add a new data to a table ---> INSERT INTO "tb name" (col details. * ---> all col without change in order) VALUES (),(),();
to select data from a table ---> SELECT (clo details) FROM "tb name";
to update a data --> UPDATE "tb name" SET col=value WHERE condition. (without condition, it will affect all the data.)
Delete --> DELETE FROM tbname WHERE condition. 


Create --> INSERT
Read ---> SELECT
Update --> UPDATE
Delete --> DELETE

Filtering results
------------------
to filter a data ---> SELECT (col details) FROM "tb name" WHERE condition;

Sorting data 
-------------
>>Arranging the result either in ascending order or descending order.

---> ORDER BY col1 (ASC, DESC).

LIMIT---> used to limit the rows.
OFFSET ---> skips the rows

Functions in MySQL
---------------------
>> takes input, process it, return a value.

Numeric Functions:
------------------
1)ROUND(x,y) --> rounds number to d decimal places. ex: ROUND(34.53344634565,5)--->34.23344
2)CEIL(x) --> roundsup  number. ex: CEIL(34.0000006)--->35
3)FLOOR(x)--> rounds down a number. ex:FLOOR(5.9999) ---> 5
4)MOD(x,y) ---> reminder. 33/30--->1*30-->30-->33-30--->3
                          44/3 --->14*3-->42 -->44-42-->2
                          2/3  --->0*3-->0-->2-0-->2
5)POW(n1,n2) ---> n1 power n2. pow(2,2) ---> 4

String Functions 
------------------
1)CONCAT(str1,str2,str3.....) --> it will attach all these strings and return a single string.Ex: concat("Hello","Guys")--->"HelloGuys".
2)LENGTH(str)--> return number of char.
3)TRIM(str) --> removes excess space at beginning and ending.
4)LOWER(str)
5)UPPER(str)
6)REPLACE(str, sub_str1, sub_str2). Ex: replace("Hello guys!", 'Hello', 'Hi') -->"Hi guys!"

Date and Time 
---------------
CURDATE() --> date
CURTIME() ---> time 
NOW()--> date and time
DATEDIFF(date1, date2)

